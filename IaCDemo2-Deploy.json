{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "assetLocationURI": {
            "type": "string"
        },

        // Hub VNet
        "hubVNet_Name": {
            "type": "string"
        },
        "hubVNet_AddressSpace": {
            "type": "string"
        },
        "hubVnet_GatewaySubnet_AddressSpace": {
            "type": "string"
        },
        "hubVNet_FirewallSubnet_AddressSpace": {
            "type": "string"
        },
        "hubVNet_BastionSubnet_AddressSpace": {
            "type": "string"
        },
        "hubVNet_subnetDC_name": {
            "type": "string"
        },
        "hubVNet_subnetDC_addressSpace": {
            "type": "string"
        },
        "hubVNet_subnet1_name": {
            "type": "string"
        },
        "hubVNet_subnet1_addressSpace": {
            "type": "string"
        },

        // Spoke 1 VNet
        "spoke1VNet_Name": {
            "type": "string"
        },
        "spoke1VNet_AddressSpace": {
            "type": "string"
        },
        "spoke1VNet_subnetAppGW_name": {
            "type": "string"
        },
        "spoke1VNet_subnetAppGW_addressSpace": {
            "type": "string"
        },
        "spoke1VNet_subnet1_name": {
            "type": "string"
        },
        "spoke1VNet_subnet1_addressSpace": {
            "type": "string"
        },
        "spoke1VNet_subnet2_name": {
            "type": "string"
        },
        "spoke1VNet_subnet2_addressSpace": {
            "type": "string"
        },
        "spoke1VNet_subnet3_name": {
            "type": "string"
        },
        "spoke1VNet_subnet3_addressSpace": {
            "type": "string"
        },

        // Spoke 2 VNet
        "spoke2VNet_Name": {
            "type": "string"
        },
        "spoke2VNet_AddressSpace": {
            "type": "string"
        },
        "spoke2VNet_subnetAppGW_name": {
            "type": "string"
        },
        "spoke2VNet_subnetAppGW_addressSpace": {
            "type": "string"
        },
        "spoke2VNet_subnet1_name": {
            "type": "string"
        },
        "spoke2VNet_subnet1_addressSpace": {
            "type": "string"
        },
        "spoke2VNet_subnet2_name": {
            "type": "string"
        },
        "spoke2VNet_subnet2_addressSpace": {
            "type": "string"
        },
        "spoke2VNet_subnet3_name": {
            "type": "string"
        },
        "spoke2VNet_subnet3_addressSpace": {
            "type": "string"
        },

        // Route Table
        "routeTable_configure": {
            "type": "bool",
            "defaultValue": false
        },
        "routeTable_name": {
            "type": "string",
            "defaultValue": "Foo"
        }
    },
    "variables": {
        "constants": {
            "location": "[resourceGroup().location]",
            "templateLocationURI": "[concat(parameters('assetLocationURI'), 'Templates/')]"
        },
        "deploymentName": "[deployment().name]",
        "deploymentNames": {
            "VNetHub": "[concat(variables('deploymentName'), '-VNet-Hub')]",
            "VNetSpoke1": "[concat(variables('deploymentName'), '-VNet-Spoke1')]",
            "VNetSpoke2": "[concat(variables('deploymentName'), '-VNet-Spoke2')]",
            "RouteTable": "[concat(variables('deploymentName'), '-RouteTable')]"
        }
    },
    "functions": [
        {
            "namespace": "function",
            "members": {
                // This function appends -NSG onto the supplied parameter which is intended to be the subnet name
                "nsgName": {
                    "parameters": [
                        {
                            "name": "subnetName",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "value": "[concat(parameters('subnetName'), '-NSG')]",
                        "type": "string"
                    }
                }
            }
        }
    ],
    "resources": [
        // VNets
        {
            "comments": "Hub VNet",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "[variables('deploymentNames').VNetHub]",
            "dependsOn": [
                "[variables('deploymentNames').RouteTable]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('constants').templateLocationURI, 'IaCDemo2-VNet-Hub.json')]"
                },
                "parameters": {
                    "virtualNetwork_name": {"value": "[parameters('hubVNet_Name')]"},
                    "virtualNetwork_addressSpace": {"value": "[parameters('hubVNet_AddressSpace')]"},
                    "subnet_gateway_addressSpace": {"value": "[parameters('hubVnet_GatewaySubnet_AddressSpace')]"},
                    "subnet_firewall_addressSpace": {"value": "[parameters('hubVNet_FirewallSubnet_AddressSpace')]"},
                    "subnet_bastion_addressSpace": {"value": "[parameters('hubVNet_BastionSubnet_AddressSpace')]"},
                    "subnet_DC_name": {"value": "[parameters('hubVNet_subnetDC_name')]"},
                    "subnet_DC_addressSpace": {"value": "[parameters('hubVNet_subnetDC_addressSpace')]"},
                    "nsg_DC_name": {"value": "[function.nsgName(parameters('hubVNet_subnetDC_name'))]"},
                    "subnet_1_name": {"value": "[parameters('hubVNet_subnet1_name')]"},
                    "subnet_1_addressSpace": {"value": "[parameters('hubVNet_subnet1_addressSpace')]"},
                    "nsg_1_name": {"value": "[function.nsgName(parameters('hubVNet_subnet1_name'))]"},
                    "configureRouteTable": {"value": "[parameters('routeTable_configure')]"},
                    "routeTableName": {"value": "[parameters('routeTable_name')]"},
                    "ddosPlanId": {"value": "Skip"},
                    "location": {"value": "[variables('constants').location]"}
                }
            }

        },
        {
            "comments": "Spoke 1 VNet",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "[variables('deploymentNames').VNetSpoke1]",
            "dependsOn": [
                "[variables('deploymentNames').RouteTable]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('constants').templateLocationURI, 'IaCDemo2-VNet-Spoke.json')]"
                },
                "parameters": {
                    "virtualNetwork_name": {"value": "[parameters('spoke1VNet_Name')]"},
                    "virtualNetwork_addressSpace": {"value": "[parameters('spoke1VNet_AddressSpace')]"},
                    "subnet_appGW_name": {"value": "[parameters('spoke1VNet_subnetAppGW_name')]"},
                    "subnet_appGW_addressSpace": {"value": "[parameters('spoke1VNet_subnetAppGW_addressSpace')]"},
                    "nsg_appGW_name": {"value": "[function.nsgName(parameters('spoke1VNet_subnetAppGW_name'))]"},
                    "subnet_1_name": {"value": "[parameters('spoke1VNet_subnet1_name')]"},
                    "subnet_1_addressSpace": {"value": "[parameters('spoke1VNet_subnet1_addressSpace')]"},
                    "nsg_1_name": {"value": "[function.nsgName(parameters('spoke1VNet_subnet1_name'))]"},
                    "subnet_2_name": {"value": "[parameters('spoke1VNet_subnet2_name')]"},
                    "subnet_2_addressSpace": {"value": "[parameters('spoke1VNet_subnet2_addressSpace')]"},
                    "nsg_2_name": {"value": "[function.nsgName(parameters('spoke1VNet_subnet2_name'))]"},
                    "subnet_3_name": {"value": "[parameters('spoke1VNet_subnet3_name')]"},
                    "subnet_3_addressSpace": {"value": "[parameters('spoke1VNet_subnet3_addressSpace')]"},
                    "nsg_3_name": {"value": "[function.nsgName(parameters('spoke1VNet_subnet3_name'))]"},
                    "configureRouteTable": {"value": "[parameters('routeTable_configure')]"},
                    "routeTableName": {"value": "[parameters('routeTable_name')]"},
                    "ddosPlanId": {"value": "Skip"},
                    "location": {"value": "[variables('constants').location]"}
                }
            }
        },
        {
            "comments": "Spoke 2 VNet",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "[variables('deploymentNames').VNetSpoke2]",
            "dependsOn": [
                "[variables('deploymentNames').RouteTable]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('constants').templateLocationURI, 'IaCDemo2-VNet-Spoke.json')]"
                },
                "parameters": {
                    "virtualNetwork_name": {"value": "[parameters('spoke2VNet_Name')]"},
                    "virtualNetwork_addressSpace": {"value": "[parameters('spoke2VNet_AddressSpace')]"},
                    "subnet_appGW_name": {"value": "[parameters('spoke2VNet_subnetAppGW_name')]"},
                    "subnet_appGW_addressSpace": {"value": "[parameters('spoke2VNet_subnetAppGW_addressSpace')]"},
                    "nsg_appGW_name": {"value": "[function.nsgName(parameters('spoke2VNet_subnetAppGW_name'))]"},
                    "subnet_1_name": {"value": "[parameters('spoke2VNet_subnet1_name')]"},
                    "subnet_1_addressSpace": {"value": "[parameters('spoke2VNet_subnet1_addressSpace')]"},
                    "nsg_1_name": {"value": "[function.nsgName(parameters('spoke2VNet_subnet1_name'))]"},
                    "subnet_2_name": {"value": "[parameters('spoke2VNet_subnet2_name')]"},
                    "subnet_2_addressSpace": {"value": "[parameters('spoke2VNet_subnet2_addressSpace')]"},
                    "nsg_2_name": {"value": "[function.nsgName(parameters('spoke2VNet_subnet2_name'))]"},
                    "subnet_3_name": {"value": "[parameters('spoke2VNet_subnet3_name')]"},
                    "subnet_3_addressSpace": {"value": "[parameters('spoke2VNet_subnet3_addressSpace')]"},
                    "nsg_3_name": {"value": "[function.nsgName(parameters('spoke2VNet_subnet3_name'))]"},
                    "configureRouteTable": {"value": "[parameters('routeTable_configure')]"},
                    "routeTableName": {"value": "[parameters('routeTable_name')]"},
                    "ddosPlanId": {"value": "Skip"},
                    "location": {"value": "[variables('constants').location]"}
                }
            }
        },

        // VNet Peerings
        {
            "comments": "Hub to Spoke 1",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('hubVNet_Name'), '/', parameters('hubVNet_Name'), '_to_', parameters('spoke1VNet_Name'))]",
            "dependsOn": [
                "[variables('deploymentNames').VNetHub]",
                "[variables('deploymentNames').VNetSpoke1]"
            ],
            "properties": {
                "remoteVirtualNetwork": {
                    "id": "[reference(variables('deploymentNames').VNetSpoke1).outputs.vnetID.value]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "[parameters('spoke1VNet_AddressSpace')]"
                    ]
                }
            }
        },
        {
            "comments": "Spoke 1 to Hub",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('spoke1VNet_Name'), '/', parameters('spoke1VNet_Name'), '_to_', parameters('hubVNet_Name'))]",
            "dependsOn": [
                "[variables('deploymentNames').VNetHub]",
                "[variables('deploymentNames').VNetSpoke1]"
            ],
            "properties": {
                "remoteVirtualNetwork": {
                    "id": "[reference(variables('deploymentNames').VNetHub).outputs.vnetID.value]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "[parameters('hubVNet_AddressSpace')]"
                    ]
                }
            }
        },
        {
            "comments": "Hub to Spoke 2",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('hubVNet_Name'), '/', parameters('hubVNet_Name'), '_to_', parameters('spoke2VNet_Name'))]",
            "dependsOn": [
                "[variables('deploymentNames').VNetHub]",
                "[variables('deploymentNames').VNetSpoke2]"
            ],
            "properties": {
                "remoteVirtualNetwork": {
                    "id": "[reference(variables('deploymentNames').VNetSpoke2).outputs.vnetID.value]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "[parameters('spoke2VNet_AddressSpace')]"
                    ]
                }
            }
        },
        {
            "comments": "Spoke 2 to Hub",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('spoke2VNet_Name'), '/', parameters('spoke2VNet_Name'), '_to_', parameters('hubVNet_Name'))]",
            "dependsOn": [
                "[variables('deploymentNames').VNetHub]",
                "[variables('deploymentNames').VNetSpoke2]"
            ],
            "properties": {
                "remoteVirtualNetwork": {
                    "id": "[reference(variables('deploymentNames').VNetHub).outputs.vnetID.value]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "[parameters('hubVNet_AddressSpace')]"
                    ]
                }
            }
        },

        // Route Table
        {
            "comments": "Route Table (empty, no routes)",
            "condition": "[parameters('routeTable_configure')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "[variables('deploymentNames').RouteTable]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('constants').templateLocationURI, 'IaCDemo2-RouteTable.json')]"
                },
                "parameters": {
                    "routeTable_name": {"value": "[parameters('routeTable_name')]"},
                    "location": {"value": "[variables('constants').location]"}
                }
            }
        }

        // VMs


        // App service plan and app service


        // DNS zone


        // Log Analytics workspace


        // storage account

    ],
    "outputs": {}
}