{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "subscriptionId": {
      "type": "string"
    },
    "location": {
      "type": "string"
    },
    "sites_AvanadeAZDemo": {
      "type": "object"
    },
    "serverfarms_AZDemo": {
      "type": "object"
    },
    "availabilitySets_App01-AV1": {
      "type": "object"
    },
    "networkSecurityGroups_NSG-DC": {
      "type": "object"
    },
    "routeTables_default": {
      "type": "object"
    },
    "dnsZones_AvanadeSouth.com": {
      "type": "object"
    },
    "virtualNetworks_AZDemo-Hub-EastUS": {
      "type": "object"
    },
    "virtualNetworks_AZDemo-Spoke-Prod": {
      "type": "object"
    },
    "virtualNetworks_AZDemo-Spoke-NonProd": {
      "type": "object"
    },
    "virtualNetworks_virtualNetworkPeerings_AZDemo-Hub-EastUS_Hub_Prod": {
      "type": "object"
    },
    "virtualNetworks_virtualNetworkPeerings_AZDemo-Spoke-Prod_Prod_Hub": {
      "type": "object"
    },
    "virtualNetworks_virtualNetworkPeerings_AZDemo-Hub-EastUS_Hub_NonProd": {
      "type": "object"
    },
    "virtualNetworks_virtualNetworkPeerings_AZDemo-Spoke-NonProd_NonProd_Hub": {
      "type": "object"
    },
    "networkInterfaces_nic-DC-1-vm0": {
      "type": "object"
    },
    "networkInterfaces_nic-DC-1-vm1": {
      "type": "object"
    },
    "virtualMachines_DC-10": {
      "type": "object"
    },
    "virtualMachines_DC-11": {
      "type": "object"
    },
    "publicIPAddresses_nic-VMDev--vm0-publicip": {
      "type": "object"
    },
    "publicIPAddresses_nic-VMDev--vm1-publicip": {
      "type": "object"
    },
    "networkInterfaces_nic-VMDev--vm0": {
      "type": "object"
    },
    "networkInterfaces_nic-VMDev--vm1": {
      "type": "object"
    },
    "virtualMachines_VMDev-0": {
      "type": "object"
    },
    "virtualMachines_VMDev-1": {
      "type": "object"
    },
    "storageAccounts_devfilestore1": {
      "type": "object"
    },
    "storageAccounts_fileServices_shares_devfilestore1_default_share1": {
      "type": "object"
    },
    "storageAccounts_blobServices_containers_devfilestore1_default_sqlbackups": {
      "type": "object"
    },
    "storageAccounts_blobServices_devfilestore1_default": {
      "type": "object"
    },
    "workspaces_LOG-monitor1": {
      "type": "object"
    },
    "KvSecretAvanadeAdmin": {
      "type": "securestring",
      "metadata": {
        "description": "Parameter retrieved from the deployments key vault with secret name 'AvanadeAdmin'"
      }
    }
  },
  "variables": {
    "rgTags": {
      "Owner": "Jason Berg",
      "Environment": "Azure Demos"
    }
  },
  "resources": [
    {
      "name": "[parameters('sites_AvanadeAZDemo').name]",
      "type": "Microsoft.Web/sites",
      "location": "[parameters('location')]",
      "tags": "[variables('rgTags')]",
      "apiVersion": "2021-01-15",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_AZDemo').name)]"
      ],
      "properties": {
        "serverFarmId": "[resourceId(resourceGroup().Name,  'Microsoft.Web/serverfarms', parameters('serverfarms_AZDemo').name)]",
        "clientCertEnabled": "[parameters('sites_AvanadeAZDemo').properties.clientCertEnabled]",
        "enabled": "[parameters('sites_AvanadeAZDemo').properties.enabled]",
        "httpsOnly": "[parameters('sites_AvanadeAZDemo').properties.httpsOnly]",
        "clientCertMode": "[parameters('sites_AvanadeAZDemo').properties.clientCertMode]",
        "clientAffinityEnabled": "[parameters('sites_AvanadeAZDemo').properties.clientAffinityEnabled]",
        "siteConfig": {
          "appSettings": "[array(parameters('sites_AvanadeAZDemo').properties.siteConfig.appSettings)]",
          "use32BitWorkerProcess": "[parameters('sites_AvanadeAZDemo').properties.siteConfig.use32BitWorkerProcess]",
          "alwaysOn": "[parameters('sites_AvanadeAZDemo').properties.siteConfig.alwaysOn]",
          "netFrameworkVersion": "[parameters('sites_AvanadeAZDemo').properties.siteConfig.netFrameworkVersion]",
          "defaultDocuments": "[array(parameters('sites_AvanadeAZDemo').properties.siteConfig.defaultDocuments)]",
          "connectionStrings": "[array(parameters('sites_AvanadeAZDemo').properties.siteConfig.connectionStrings)]",
          "cors": {
            "allowedOrigins": "[array(parameters('sites_AvanadeAZDemo').properties.siteConfig.cors.allowedOrigins)]",
            "supportCredentials": "[parameters('sites_AvanadeAZDemo').properties.siteConfig.cors.supportCredentials]"
          },
          "detailedErrorLoggingEnabled": "[parameters('sites_AvanadeAZDemo').properties.siteConfig.detailedErrorLoggingEnabled]",
          "ftpsState": "[parameters('sites_AvanadeAZDemo').properties.siteConfig.ftpsState]",
          "healthCheckPath": "[parameters('sites_AvanadeAZDemo').properties.siteConfig.healthCheckPath]",
          "http20Enabled": "[parameters('sites_AvanadeAZDemo').properties.siteConfig.http20Enabled]",
          "localMySqlEnabled": "[parameters('sites_AvanadeAZDemo').properties.siteConfig.localMySqlEnabled]",
          "managedPipelineMode": "[parameters('sites_AvanadeAZDemo').properties.siteConfig.managedPipelineMode]",
          "minTlsVersion": "[parameters('sites_AvanadeAZDemo').properties.siteConfig.minTlsVersion]",
          "numberOfWorkers": "[parameters('sites_AvanadeAZDemo').properties.siteConfig.numberOfWorkers]",
          "remoteDebuggingEnabled": "[parameters('sites_AvanadeAZDemo').properties.siteConfig.remoteDebuggingEnabled]",
          "remoteDebuggingVersion": "[parameters('sites_AvanadeAZDemo').properties.siteConfig.remoteDebuggingVersion]",
          "requestTracingEnabled": "[parameters('sites_AvanadeAZDemo').properties.siteConfig.requestTracingEnabled]",
          "scmIpSecurityRestrictionsUseMain": "[parameters('sites_AvanadeAZDemo').properties.siteConfig.scmIpSecurityRestrictionsUseMain]",
          "scmType": "[parameters('sites_AvanadeAZDemo').properties.siteConfig.scmType]",
          "webSocketsEnabled": "[parameters('sites_AvanadeAZDemo').properties.siteConfig.webSocketsEnabled]"
        }
      }
    },
    {
      "apiVersion": "2016-03-01",
      "name": "[parameters('serverfarms_AZDemo').name]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[parameters('location')]",
      "kind": "[parameters('serverfarms_AZDemo').kind]",
      "tags": "[variables('rgTags')]",
      "sku": {
        "name": "[parameters('serverfarms_AZDemo').sku.name]",
        "capacity": "[parameters('serverfarms_AZDemo').sku.capacity]",
        "tier": "[parameters('serverfarms_AZDemo').sku.tier]"
      },
      "properties": {
        "perSiteScaling": "[parameters('serverfarms_AZDemo').properties.perSiteScaling]",
        "reserved": "[parameters('serverfarms_AZDemo').properties.reserved]",
        "maximumElasticWorkerCount": "[parameters('serverfarms_AZDemo').properties.maximumElasticWorkerCount]"
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('availabilitySets_App01-AV1').name]",
      "location": "[parameters('location')]",
      "tags": "[variables('rgTags')]",
      "properties": {
        "platformFaultDomainCount": "[parameters('availabilitySets_App01-AV1').properties.platformFaultDomainCount]",
        "platformUpdateDomainCount": "[parameters('availabilitySets_App01-AV1').properties.platformUpdateDomainCount]"
      },
      "sku": {
        "name": "[parameters('availabilitySets_App01-AV1').sku.name]"
      }
    },
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('networkSecurityGroups_NSG-DC').name]",
      "location": "[parameters('location')]",
      "tags": "[variables('rgTags')]",
      "dependsOn": [],
      "properties": {
        "securityRules": [
          {
            "properties": {
              "description": "[parameters('networkSecurityGroups_NSG-DC').properties.securityRules[0].properties.description]",
              "protocol": "[parameters('networkSecurityGroups_NSG-DC').properties.securityRules[0].properties.protocol]",
              "sourcePortRange": "[parameters('networkSecurityGroups_NSG-DC').properties.securityRules[0].properties.sourcePortRange]",
              "destinationPortRange": "[parameters('networkSecurityGroups_NSG-DC').properties.securityRules[0].properties.destinationPortRange]",
              "sourceAddressPrefix": "[parameters('networkSecurityGroups_NSG-DC').properties.securityRules[0].properties.sourceAddressPrefix]",
              "destinationAddressPrefix": "[parameters('networkSecurityGroups_NSG-DC').properties.securityRules[0].properties.destinationAddressPrefix]",
              "access": "[parameters('networkSecurityGroups_NSG-DC').properties.securityRules[0].properties.access]",
              "priority": "[parameters('networkSecurityGroups_NSG-DC').properties.securityRules[0].properties.priority]",
              "direction": "[parameters('networkSecurityGroups_NSG-DC').properties.securityRules[0].properties.direction]"
            },
            "name": "[parameters('networkSecurityGroups_NSG-DC').properties.securityRules[0].name]"
          },
          {
            "properties": {
              "description": "[parameters('networkSecurityGroups_NSG-DC').properties.securityRules[1].properties.description]",
              "protocol": "[parameters('networkSecurityGroups_NSG-DC').properties.securityRules[1].properties.protocol]",
              "sourcePortRange": "[parameters('networkSecurityGroups_NSG-DC').properties.securityRules[1].properties.sourcePortRange]",
              "destinationPortRange": "[parameters('networkSecurityGroups_NSG-DC').properties.securityRules[1].properties.destinationPortRange]",
              "sourceAddressPrefix": "[parameters('networkSecurityGroups_NSG-DC').properties.securityRules[1].properties.sourceAddressPrefix]",
              "destinationAddressPrefix": "[parameters('networkSecurityGroups_NSG-DC').properties.securityRules[1].properties.destinationAddressPrefix]",
              "access": "[parameters('networkSecurityGroups_NSG-DC').properties.securityRules[1].properties.access]",
              "priority": "[parameters('networkSecurityGroups_NSG-DC').properties.securityRules[1].properties.priority]",
              "direction": "[parameters('networkSecurityGroups_NSG-DC').properties.securityRules[1].properties.direction]"
            },
            "name": "[parameters('networkSecurityGroups_NSG-DC').properties.securityRules[1].name]"
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/routeTables",
      "name": "[parameters('routeTables_default').name]",
      "location": "[parameters('location')]",
      "tags": "[variables('rgTags')]",
      "properties": {
        "routes": [
          {
            "name": "[parameters('routeTables_default').properties.routes[0].name]",
            "properties": {
              "addressPrefix": "[parameters('routeTables_default').properties.routes[0].properties.addressPrefix]",
              "nextHopType": "[parameters('routeTables_default').properties.routes[0].properties.nextHopType]",
              "nextHopIpAddress": "[parameters('routeTables_default').properties.routes[0].properties.nextHopIpAddress]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-05-01",
      "type": "Microsoft.Network/dnsZones",
      "name": "[parameters('dnsZones_AvanadeSouth.com').name]",
      "location": "[parameters('dnsZones_AvanadeSouth.com').location]",
      "tags": "[variables('rgTags')]",
      "properties": "[parameters('dnsZones_AvanadeSouth.com').properties]"
    },
    {
      "apiVersion": "2018-08-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworks_AZDemo-Hub-EastUS').name]",
      "location": "[parameters('location')]",
      "tags": "[variables('rgTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NSG-DC').name)]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": "[array(parameters('virtualNetworks_AZDemo-Hub-EastUS').properties.addressSpace.addressPrefixes)]"
        },
        "subnets": [
          {
            "name": "[parameters('virtualNetworks_AZDemo-Hub-EastUS').properties.subnets[0].name]",
            "properties": {
              "addressPrefix": "[parameters('virtualNetworks_AZDemo-Hub-EastUS').properties.subnets[0].properties.addressPrefix]"
            }
          },
          {
            "name": "[parameters('virtualNetworks_AZDemo-Hub-EastUS').properties.subnets[1].name]",
            "properties": {
              "addressPrefix": "[parameters('virtualNetworks_AZDemo-Hub-EastUS').properties.subnets[1].properties.addressPrefix]"
            }
          },
          {
            "name": "[parameters('virtualNetworks_AZDemo-Hub-EastUS').properties.subnets[2].name]",
            "properties": {
              "addressPrefix": "[parameters('virtualNetworks_AZDemo-Hub-EastUS').properties.subnets[2].properties.addressPrefix]",
              "networkSecurityGroup": {
                "id": "[resourceId(resourceGroup().Name,  'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NSG-DC').name)]"
              }
            }
          },
          {
            "name": "[parameters('virtualNetworks_AZDemo-Hub-EastUS').properties.subnets[3].name]",
            "properties": {
              "addressPrefix": "[parameters('virtualNetworks_AZDemo-Hub-EastUS').properties.subnets[3].properties.addressPrefix]"
            }
          }
        ],
        "enableDdosProtection": "[parameters('virtualNetworks_AZDemo-Hub-EastUS').properties.enableDdosProtection]"
      }
    },
    {
      "apiVersion": "2018-08-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworks_AZDemo-Spoke-Prod').name]",
      "location": "[parameters('location')]",
      "tags": "[variables('rgTags')]",
      "dependsOn": [],
      "properties": {
        "addressSpace": {
          "addressPrefixes": "[array(parameters('virtualNetworks_AZDemo-Spoke-Prod').properties.addressSpace.addressPrefixes)]"
        },
        "subnets": [
          {
            "name": "[parameters('virtualNetworks_AZDemo-Spoke-Prod').properties.subnets[0].name]",
            "properties": {
              "addressPrefix": "[parameters('virtualNetworks_AZDemo-Spoke-Prod').properties.subnets[0].properties.addressPrefix]"
            }
          },
          {
            "name": "[parameters('virtualNetworks_AZDemo-Spoke-Prod').properties.subnets[1].name]",
            "properties": {
              "addressPrefix": "[parameters('virtualNetworks_AZDemo-Spoke-Prod').properties.subnets[1].properties.addressPrefix]"
            }
          }
        ],
        "enableDdosProtection": "[parameters('virtualNetworks_AZDemo-Spoke-Prod').properties.enableDdosProtection]"
      }
    },
    {
      "apiVersion": "2018-08-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworks_AZDemo-Spoke-NonProd').name]",
      "location": "[parameters('location')]",
      "tags": "[variables('rgTags')]",
      "dependsOn": [],
      "properties": {
        "addressSpace": {
          "addressPrefixes": "[array(parameters('virtualNetworks_AZDemo-Spoke-NonProd').properties.addressSpace.addressPrefixes)]"
        },
        "subnets": [
          {
            "name": "[parameters('virtualNetworks_AZDemo-Spoke-NonProd').properties.subnets[0].name]",
            "properties": {
              "addressPrefix": "[parameters('virtualNetworks_AZDemo-Spoke-NonProd').properties.subnets[0].properties.addressPrefix]"
            }
          },
          {
            "name": "[parameters('virtualNetworks_AZDemo-Spoke-NonProd').properties.subnets[1].name]",
            "properties": {
              "addressPrefix": "[parameters('virtualNetworks_AZDemo-Spoke-NonProd').properties.subnets[1].properties.addressPrefix]"
            }
          }
        ],
        "enableDdosProtection": "[parameters('virtualNetworks_AZDemo-Spoke-NonProd').properties.enableDdosProtection]"
      }
    },
    {
      "apiVersion": "2018-08-01",
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "name": "[concat(parameters('virtualNetworks_AZDemo-Hub-EastUS').name, '/', parameters('virtualNetworks_virtualNetworkPeerings_AZDemo-Hub-EastUS_Hub_Prod').name)]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_AZDemo-Hub-EastUS').name)]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_AZDemo-Spoke-Prod').name)]"
      ],
      "properties": {
        "allowVirtualNetworkAccess": "[parameters('virtualNetworks_virtualNetworkPeerings_AZDemo-Hub-EastUS_Hub_Prod').properties.allowVirtualNetworkAccess]",
        "allowForwardedTraffic": "[parameters('virtualNetworks_virtualNetworkPeerings_AZDemo-Hub-EastUS_Hub_Prod').properties.allowForwardedTraffic]",
        "allowGatewayTransit": "[parameters('virtualNetworks_virtualNetworkPeerings_AZDemo-Hub-EastUS_Hub_Prod').properties.allowGatewayTransit]",
        "useRemoteGateways": "[parameters('virtualNetworks_virtualNetworkPeerings_AZDemo-Hub-EastUS_Hub_Prod').properties.useRemoteGateways]",
        "remoteVirtualNetwork": {
          "id": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', resourceGroup().name, '/providers/', 'Microsoft.Network/virtualNetworks', '/', parameters('virtualNetworks_AZDemo-Spoke-Prod').name)]"
        }
      }
    },
    {
      "apiVersion": "2018-08-01",
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "name": "[concat(parameters('virtualNetworks_AZDemo-Spoke-Prod').name, '/', parameters('virtualNetworks_virtualNetworkPeerings_AZDemo-Spoke-Prod_Prod_Hub').name)]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_AZDemo-Hub-EastUS').name)]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_AZDemo-Spoke-Prod').name)]"
      ],
      "properties": {
        "allowVirtualNetworkAccess": "[parameters('virtualNetworks_virtualNetworkPeerings_AZDemo-Spoke-Prod_Prod_Hub').properties.allowVirtualNetworkAccess]",
        "allowForwardedTraffic": "[parameters('virtualNetworks_virtualNetworkPeerings_AZDemo-Spoke-Prod_Prod_Hub').properties.allowForwardedTraffic]",
        "allowGatewayTransit": "[parameters('virtualNetworks_virtualNetworkPeerings_AZDemo-Spoke-Prod_Prod_Hub').properties.allowGatewayTransit]",
        "useRemoteGateways": "[parameters('virtualNetworks_virtualNetworkPeerings_AZDemo-Spoke-Prod_Prod_Hub').properties.useRemoteGateways]",
        "remoteVirtualNetwork": {
          "id": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', resourceGroup().name, '/providers/', 'Microsoft.Network/virtualNetworks', '/', parameters('virtualNetworks_AZDemo-Hub-EastUS').name)]"
        }
      }
    },
    {
      "apiVersion": "2018-08-01",
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "name": "[concat(parameters('virtualNetworks_AZDemo-Hub-EastUS').name, '/', parameters('virtualNetworks_virtualNetworkPeerings_AZDemo-Hub-EastUS_Hub_NonProd').name)]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_AZDemo-Hub-EastUS').name)]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_AZDemo-Spoke-NonProd').name)]"
      ],
      "properties": {
        "allowVirtualNetworkAccess": "[parameters('virtualNetworks_virtualNetworkPeerings_AZDemo-Hub-EastUS_Hub_NonProd').properties.allowVirtualNetworkAccess]",
        "allowForwardedTraffic": "[parameters('virtualNetworks_virtualNetworkPeerings_AZDemo-Hub-EastUS_Hub_NonProd').properties.allowForwardedTraffic]",
        "allowGatewayTransit": "[parameters('virtualNetworks_virtualNetworkPeerings_AZDemo-Hub-EastUS_Hub_NonProd').properties.allowGatewayTransit]",
        "useRemoteGateways": "[parameters('virtualNetworks_virtualNetworkPeerings_AZDemo-Hub-EastUS_Hub_NonProd').properties.useRemoteGateways]",
        "remoteVirtualNetwork": {
          "id": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', resourceGroup().name, '/providers/', 'Microsoft.Network/virtualNetworks', '/', parameters('virtualNetworks_AZDemo-Spoke-NonProd').name)]"
        }
      }
    },
    {
      "apiVersion": "2018-08-01",
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "name": "[concat(parameters('virtualNetworks_AZDemo-Spoke-NonProd').name, '/', parameters('virtualNetworks_virtualNetworkPeerings_AZDemo-Spoke-NonProd_NonProd_Hub').name)]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_AZDemo-Hub-EastUS').name)]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_AZDemo-Spoke-NonProd').name)]"
      ],
      "properties": {
        "allowVirtualNetworkAccess": "[parameters('virtualNetworks_virtualNetworkPeerings_AZDemo-Spoke-NonProd_NonProd_Hub').properties.allowVirtualNetworkAccess]",
        "allowForwardedTraffic": "[parameters('virtualNetworks_virtualNetworkPeerings_AZDemo-Spoke-NonProd_NonProd_Hub').properties.allowForwardedTraffic]",
        "allowGatewayTransit": "[parameters('virtualNetworks_virtualNetworkPeerings_AZDemo-Spoke-NonProd_NonProd_Hub').properties.allowGatewayTransit]",
        "useRemoteGateways": "[parameters('virtualNetworks_virtualNetworkPeerings_AZDemo-Spoke-NonProd_NonProd_Hub').properties.useRemoteGateways]",
        "remoteVirtualNetwork": {
          "id": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', resourceGroup().name, '/providers/', 'Microsoft.Network/virtualNetworks', '/', parameters('virtualNetworks_AZDemo-Hub-EastUS').name)]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_nic-DC-1-vm0').name]",
      "apiVersion": "2018-11-01",
      "location": "[parameters('location')]",
      "tags": "[variables('rgTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_AZDemo-Hub-EastUS').name)]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[parameters('networkInterfaces_nic-DC-1-vm0').properties.ipConfigurations[0].name]",
            "properties": {
              "privateIPAllocationMethod": "[parameters('networkInterfaces_nic-DC-1-vm0').properties.ipConfigurations[0].properties.privateIPAllocationMethod]",
              "subnet": {
                "id": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', resourceGroup().name, '/providers/', 'Microsoft.Network/virtualNetworks', '/', parameters('virtualNetworks_AZDemo-Hub-EastUS').name, '/subnets/', parameters('virtualNetworks_AZDemo-Hub-EastUS').properties.subnets[2].name)]"
              },
              "applicationSecurityGroups": "[array(parameters('networkInterfaces_nic-DC-1-vm0').properties.ipConfigurations[0].properties.applicationSecurityGroups)]"
            }
          }
        ],
        "enableAcceleratedNetworking": "[parameters('networkInterfaces_nic-DC-1-vm0').properties.enableAcceleratedNetworking]",
        "enableIPForwarding": "[parameters('networkInterfaces_nic-DC-1-vm0').properties.enableIPForwarding]"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_nic-DC-1-vm1').name]",
      "apiVersion": "2018-11-01",
      "location": "[parameters('location')]",
      "tags": "[variables('rgTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_AZDemo-Hub-EastUS').name)]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[parameters('networkInterfaces_nic-DC-1-vm1').properties.ipConfigurations[0].name]",
            "properties": {
              "privateIPAllocationMethod": "[parameters('networkInterfaces_nic-DC-1-vm1').properties.ipConfigurations[0].properties.privateIPAllocationMethod]",
              "subnet": {
                "id": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', resourceGroup().name, '/providers/', 'Microsoft.Network/virtualNetworks', '/', parameters('virtualNetworks_AZDemo-Hub-EastUS').name, '/subnets/', parameters('virtualNetworks_AZDemo-Hub-EastUS').properties.subnets[2].name)]"
              },
              "applicationSecurityGroups": "[array(parameters('networkInterfaces_nic-DC-1-vm1').properties.ipConfigurations[0].properties.applicationSecurityGroups)]"
            }
          }
        ],
        "enableAcceleratedNetworking": "[parameters('networkInterfaces_nic-DC-1-vm1').properties.enableAcceleratedNetworking]",
        "enableIPForwarding": "[parameters('networkInterfaces_nic-DC-1-vm1').properties.enableIPForwarding]"
      }
    },
    {
      "name": "[parameters('virtualMachines_DC-10').name]",
      "apiVersion": "2018-06-01",
      "type": "Microsoft.Compute/virtualMachines",
      "tags": "[variables('rgTags')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_nic-DC-1-vm0').name)]",
        "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySets_App01-AV1').name)]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId(resourceGroup().Name, 'Microsoft.Compute/availabilitySets', parameters('availabilitySets_App01-AV1').name)]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachines_DC-10').properties.hardwareProfile.vmSize]"
        },
        "LicenseType": "[parameters('virtualMachines_DC-10').properties.LicenseType]",
        "osProfile": {
          "computerName": "[parameters('virtualMachines_DC-10').properties.osProfile.computerName]",
          "adminPassword": "[parameters('KvSecretAvanadeAdmin')]",
          "adminUsername": "[parameters('virtualMachines_DC-10').properties.osProfile.adminUsername]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('virtualMachines_DC-10').properties.storageProfile.imageReference.publisher]",
            "offer": "[parameters('virtualMachines_DC-10').properties.storageProfile.imageReference.offer]",
            "sku": "[parameters('virtualMachines_DC-10').properties.storageProfile.imageReference.sku]",
            "version": "[parameters('virtualMachines_DC-10').properties.storageProfile.imageReference.version]"
          },
          "osDisk": {
            "createOption": "[parameters('virtualMachines_DC-10').properties.storageProfile.osDisk.createOption]",
            "managedDisk": {
              "storageAccountType": "[parameters('virtualMachines_DC-10').properties.storageProfile.osDisk.managedDisk.storageAccountType]"
            },
            "caching": "[parameters('virtualMachines_DC-10').properties.storageProfile.osDisk.caching]"
          },
          "dataDisks": "[array(parameters('virtualMachines_DC-10').properties.storageProfile.dataDisks)]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_nic-DC-1-vm0').name)]",
              "properties": {
                "primary": "[parameters('virtualMachines_DC-10').properties.networkProfile.networkInterfaces[0].properties.primary]"
              }
            }
          ]
        }
      }
    },
    {
      "name": "[parameters('virtualMachines_DC-11').name]",
      "apiVersion": "2018-06-01",
      "type": "Microsoft.Compute/virtualMachines",
      "tags": "[variables('rgTags')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_nic-DC-1-vm1').name)]",
        "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySets_App01-AV1').name)]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId(resourceGroup().Name, 'Microsoft.Compute/availabilitySets', parameters('availabilitySets_App01-AV1').name)]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachines_DC-11').properties.hardwareProfile.vmSize]"
        },
        "LicenseType": "[parameters('virtualMachines_DC-11').properties.LicenseType]",
        "osProfile": {
          "computerName": "[parameters('virtualMachines_DC-11').properties.osProfile.computerName]",
          "adminPassword": "[parameters('KvSecretAvanadeAdmin')]",
          "adminUsername": "[parameters('virtualMachines_DC-11').properties.osProfile.adminUsername]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('virtualMachines_DC-11').properties.storageProfile.imageReference.publisher]",
            "offer": "[parameters('virtualMachines_DC-11').properties.storageProfile.imageReference.offer]",
            "sku": "[parameters('virtualMachines_DC-11').properties.storageProfile.imageReference.sku]",
            "version": "[parameters('virtualMachines_DC-11').properties.storageProfile.imageReference.version]"
          },
          "osDisk": {
            "createOption": "[parameters('virtualMachines_DC-11').properties.storageProfile.osDisk.createOption]",
            "managedDisk": {
              "storageAccountType": "[parameters('virtualMachines_DC-11').properties.storageProfile.osDisk.managedDisk.storageAccountType]"
            },
            "caching": "[parameters('virtualMachines_DC-11').properties.storageProfile.osDisk.caching]"
          },
          "dataDisks": "[array(parameters('virtualMachines_DC-11').properties.storageProfile.dataDisks)]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_nic-DC-1-vm1').name)]",
              "properties": {
                "primary": "[parameters('virtualMachines_DC-11').properties.networkProfile.networkInterfaces[0].properties.primary]"
              }
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2018-11-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_nic-VMDev--vm0-publicip').name]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAddresses_nic-VMDev--vm0-publicip').properties.publicIPAllocationMethod]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('publicIPAddresses_nic-VMDev--vm0-publicip').properties.dnsSettings.domainNameLabel]"
        }
      },
      "sku": {
        "name": "[parameters('publicIPAddresses_nic-VMDev--vm0-publicip').sku.name]"
      }
    },
    {
      "apiVersion": "2018-11-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddresses_nic-VMDev--vm1-publicip').name]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAddresses_nic-VMDev--vm1-publicip').properties.publicIPAllocationMethod]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('publicIPAddresses_nic-VMDev--vm1-publicip').properties.dnsSettings.domainNameLabel]"
        }
      },
      "sku": {
        "name": "[parameters('publicIPAddresses_nic-VMDev--vm1-publicip').sku.name]"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_nic-VMDev--vm0').name]",
      "apiVersion": "2018-11-01",
      "location": "[parameters('location')]",
      "tags": "[variables('rgTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_AZDemo-Spoke-NonProd').name)]",
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_nic-VMDev--vm0-publicip').name)]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[parameters('networkInterfaces_nic-VMDev--vm0').properties.ipConfigurations[0].name]",
            "properties": {
              "privateIPAllocationMethod": "[parameters('networkInterfaces_nic-VMDev--vm0').properties.ipConfigurations[0].properties.privateIPAllocationMethod]",
              "publicIPAddress": {
                "id": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', resourceGroup().name, '/providers/', 'Microsoft.Network/publicIPAddresses', '/', parameters('publicIPAddresses_nic-VMDev--vm0-publicip').name)]"
              },
              "subnet": {
                "id": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', resourceGroup().name, '/providers/', 'Microsoft.Network/virtualNetworks', '/', parameters('virtualNetworks_AZDemo-Spoke-NonProd').name, '/subnets/', parameters('virtualNetworks_AZDemo-Spoke-NonProd').properties.subnets[0].name)]"
              },
              "applicationSecurityGroups": "[array(parameters('networkInterfaces_nic-VMDev--vm0').properties.ipConfigurations[0].properties.applicationSecurityGroups)]"
            }
          }
        ],
        "enableAcceleratedNetworking": "[parameters('networkInterfaces_nic-VMDev--vm0').properties.enableAcceleratedNetworking]",
        "enableIPForwarding": "[parameters('networkInterfaces_nic-VMDev--vm0').properties.enableIPForwarding]"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('networkInterfaces_nic-VMDev--vm1').name]",
      "apiVersion": "2018-11-01",
      "location": "[parameters('location')]",
      "tags": "[variables('rgTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_AZDemo-Spoke-NonProd').name)]",
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_nic-VMDev--vm1-publicip').name)]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[parameters('networkInterfaces_nic-VMDev--vm1').properties.ipConfigurations[0].name]",
            "properties": {
              "privateIPAllocationMethod": "[parameters('networkInterfaces_nic-VMDev--vm1').properties.ipConfigurations[0].properties.privateIPAllocationMethod]",
              "publicIPAddress": {
                "id": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', resourceGroup().name, '/providers/', 'Microsoft.Network/publicIPAddresses', '/', parameters('publicIPAddresses_nic-VMDev--vm1-publicip').name)]"
              },
              "subnet": {
                "id": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', resourceGroup().name, '/providers/', 'Microsoft.Network/virtualNetworks', '/', parameters('virtualNetworks_AZDemo-Spoke-NonProd').name, '/subnets/', parameters('virtualNetworks_AZDemo-Spoke-NonProd').properties.subnets[0].name)]"
              },
              "applicationSecurityGroups": "[array(parameters('networkInterfaces_nic-VMDev--vm1').properties.ipConfigurations[0].properties.applicationSecurityGroups)]"
            }
          }
        ],
        "enableAcceleratedNetworking": "[parameters('networkInterfaces_nic-VMDev--vm1').properties.enableAcceleratedNetworking]",
        "enableIPForwarding": "[parameters('networkInterfaces_nic-VMDev--vm1').properties.enableIPForwarding]"
      }
    },
    {
      "name": "[parameters('virtualMachines_VMDev-0').name]",
      "apiVersion": "2018-06-01",
      "type": "Microsoft.Compute/virtualMachines",
      "tags": "[variables('rgTags')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_nic-VMDev--vm0').name)]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachines_VMDev-0').properties.hardwareProfile.vmSize]"
        },
        "LicenseType": "[parameters('virtualMachines_VMDev-0').properties.LicenseType]",
        "osProfile": {
          "computerName": "[parameters('virtualMachines_VMDev-0').properties.osProfile.computerName]",
          "adminPassword": "[parameters('KvSecretAvanadeAdmin')]",
          "adminUsername": "[parameters('virtualMachines_VMDev-0').properties.osProfile.adminUsername]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('virtualMachines_VMDev-0').properties.storageProfile.imageReference.publisher]",
            "offer": "[parameters('virtualMachines_VMDev-0').properties.storageProfile.imageReference.offer]",
            "sku": "[parameters('virtualMachines_VMDev-0').properties.storageProfile.imageReference.sku]",
            "version": "[parameters('virtualMachines_VMDev-0').properties.storageProfile.imageReference.version]"
          },
          "osDisk": {
            "createOption": "[parameters('virtualMachines_VMDev-0').properties.storageProfile.osDisk.createOption]",
            "managedDisk": {
              "storageAccountType": "[parameters('virtualMachines_VMDev-0').properties.storageProfile.osDisk.managedDisk.storageAccountType]"
            },
            "caching": "[parameters('virtualMachines_VMDev-0').properties.storageProfile.osDisk.caching]"
          },
          "dataDisks": "[array(parameters('virtualMachines_VMDev-0').properties.storageProfile.dataDisks)]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_nic-VMDev--vm0').name)]",
              "properties": {
                "primary": "[parameters('virtualMachines_VMDev-0').properties.networkProfile.networkInterfaces[0].properties.primary]"
              }
            }
          ]
        }
      }
    },
    {
      "name": "[parameters('virtualMachines_VMDev-1').name]",
      "apiVersion": "2018-06-01",
      "type": "Microsoft.Compute/virtualMachines",
      "tags": "[variables('rgTags')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_nic-VMDev--vm1').name)]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachines_VMDev-1').properties.hardwareProfile.vmSize]"
        },
        "LicenseType": "[parameters('virtualMachines_VMDev-1').properties.LicenseType]",
        "osProfile": {
          "computerName": "[parameters('virtualMachines_VMDev-1').properties.osProfile.computerName]",
          "adminPassword": "[parameters('KvSecretAvanadeAdmin')]",
          "adminUsername": "[parameters('virtualMachines_VMDev-1').properties.osProfile.adminUsername]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('virtualMachines_VMDev-1').properties.storageProfile.imageReference.publisher]",
            "offer": "[parameters('virtualMachines_VMDev-1').properties.storageProfile.imageReference.offer]",
            "sku": "[parameters('virtualMachines_VMDev-1').properties.storageProfile.imageReference.sku]",
            "version": "[parameters('virtualMachines_VMDev-1').properties.storageProfile.imageReference.version]"
          },
          "osDisk": {
            "createOption": "[parameters('virtualMachines_VMDev-1').properties.storageProfile.osDisk.createOption]",
            "managedDisk": {
              "storageAccountType": "[parameters('virtualMachines_VMDev-1').properties.storageProfile.osDisk.managedDisk.storageAccountType]"
            },
            "caching": "[parameters('virtualMachines_VMDev-1').properties.storageProfile.osDisk.caching]"
          },
          "dataDisks": "[array(parameters('virtualMachines_VMDev-1').properties.storageProfile.dataDisks)]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_nic-VMDev--vm1').name)]",
              "properties": {
                "primary": "[parameters('virtualMachines_VMDev-1').properties.networkProfile.networkInterfaces[0].properties.primary]"
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccounts_devfilestore1').name]",
      "kind": "[parameters('storageAccounts_devfilestore1').kind]",
      "apiVersion": "2019-04-01",
      "location": "[parameters('location')]",
      "tags": "[variables('rgTags')]",
      "sku": {
        "name": "[parameters('storageAccounts_devfilestore1').sku.name]"
      },
      "properties": {
        "isHnsEnabled": "[parameters('storageAccounts_devfilestore1').properties.isHnsEnabled]",
        "encryption": {
          "keySource": "[parameters('storageAccounts_devfilestore1').properties.encryption.keySource]",
          "services": {
            "blob": {
              "enabled": "[parameters('storageAccounts_devfilestore1').properties.encryption.services.blob.enabled]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2019-04-01",
      "name": "[concat(parameters('storageAccounts_devfilestore1').name, '/default/', parameters('storageAccounts_fileServices_shares_devfilestore1_default_share1').name)]",
      "tags": "[parameters('storageAccounts_fileServices_shares_devfilestore1_default_share1').tags]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_devfilestore1').name)]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-04-01",
      "name": "[concat(parameters('storageAccounts_devfilestore1').name, '/default/', parameters('storageAccounts_blobServices_containers_devfilestore1_default_sqlbackups').name)]",
      "tags": "[parameters('storageAccounts_blobServices_containers_devfilestore1_default_sqlbackups').tags]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_devfilestore1').name)]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(parameters('storageAccounts_devfilestore1').name, '/', parameters('storageAccounts_blobServices_devfilestore1_default').name)]",
      "tags": "[variables('rgTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_devfilestore1').name)]"
      ],
      "properties": {
        "deleteRetentionPolicy": {
          "enabled": "[parameters('storageAccounts_blobServices_devfilestore1_default').properties.deleteRetentionPolicy.enabled]"
        },
        "isVersioningEnabled": "[parameters('storageAccounts_blobServices_devfilestore1_default').properties.isVersioningEnabled]",
        "changeFeed": {
          "enabled": "[parameters('storageAccounts_blobServices_devfilestore1_default').properties.changeFeed.enabled]"
        }
      }
    },
    {
      "name": "[parameters('workspaces_LOG-monitor1').name]",
      "type": "Microsoft.OperationalInsights/workspaces",
      "location": "[parameters('location')]",
      "apiVersion": "2017-03-15-preview",
      "tags": "[variables('rgTags')]",
      "properties": {
        "sku": {
          "name": "[parameters('workspaces_LOG-monitor1').properties.sku.name]"
        }
      }
    }
  ],
  "outputs": {}
}